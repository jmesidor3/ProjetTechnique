# Fluentd input for receiving logs from other Fluentd instances
<source>
  @type forward
  bind 0.0.0.0
  port 24224
</source>

# input plugin that exports metrics
<source>
  @type prometheus
</source>

<source>
  @type monitor_agent
</source>

<source>
  @type forward
</source>

# input plugin that collects metrics from MonitorAgent
<source>
  @type prometheus_monitor
  <labels>
    host ${hostname}
  </labels>
</source>

# input plugin that collects metrics for output plugin
<source>
  @type prometheus_output_monitor
  <labels>
    host ${hostname}
  </labels>
</source>

# input plugin that collects metrics for in_tail plugin
<source>
  @type prometheus_tail_monitor
  <labels>
    host ${hostname}
  </labels>
</source>

# Expose Prometheus metrics for Fluentd itself
<source>
  @type prometheus
  bind 0.0.0.0
  port 24231
  metrics_path /metrics
</source>


# Prometheus metrics for incoming logs from biblio_app
<filter biblio_app.**>
  @type prometheus
  <metric>
    name fluentd_input_biblio_app_num_records_total
    type counter
    desc "Total number of incoming logs for biblio_app"
    <labels>
      tag ${tag}
      service_name biblio_app
      hostname ${hostname}
    </labels>
  </metric>
</filter>

# Prometheus metrics for incoming logs from biblio_api
<filter biblio_api.**>
  @type prometheus
  <metric>
    name fluentd_input_biblio_api_num_records_total
    type counter
    desc "Total number of incoming logs for biblio_api"
    <labels>
      tag ${tag}
      service_name biblio_api
      hostname ${hostname}
    </labels>
  </metric>
</filter>

# Output the logs to Elasticsearch for storage (both biblio_app and biblio_api)
# <match biblio_app.**>
#   @type elasticsearch
#   host elasticsearch
#   port 9200
#   logstash_format true
#   logstash_prefix fluentd_biblio_app
#   logstash_dateformat %Y%m%d
#   include_tag_key true
#   tag_key @log_name
#   flush_interval 1s
# </match>

# <match biblio_api.**>
#   @type elasticsearch
#   host elasticsearch
#   port 9200
#   logstash_format true
#   logstash_prefix fluentd_biblio_api
#   logstash_dateformat %Y%m%d
#   include_tag_key true
#   tag_key @log_name
#   flush_interval 1s
# </match>


## Nginx Access Log Configuration
<source>
  @type tail
  format nginx
  tag nginx.access
  path /var/log/nginx/access.log
  pos_file /var/log/fluentd/nginx-access.pos
  read_from_head true
  refresh_interval 5
  <parse>
    @type nginx
  </parse>
</source>

## Nginx Error Log Configuration
<source>
  @type tail
  format nginx
  tag nginx.error
  path /var/log/nginx/error.log
  pos_file /var/log/fluentd/nginx-error.pos
  read_from_head true
  refresh_interval 5
  <parse>
    @type nginx
  </parse>
</source>

# Convert Nginx logs into Prometheus metrics
<filter nginx.access>
  @type prometheus
  metrics_name nginx_access_logs
  <metric>
    name nginx_access_request_count
    type counter
    desc "Number of requests handled by Nginx for biblio"
    key request
  </metric>
  <metric>
    name nginx_access_bytes
    type counter
    desc "Total bytes sent by Nginx"
    key size
  </metric>
  <metric>
    name nginx_access_request_duration
    type summary
    desc "Request processing time for Nginx in biblio"
    key request_time
  </metric>
</filter>

## MySQL Slow Query Log Configuration
<source>
  @type tail
  format none
  tag mysql.slow_query
  path /var/log/mysql/slow.log
  pos_file /var/log/fluentd/mysql-slow-query.pos
  read_from_head true
</source>

## MySQL Error Log Configuration
<source>
  @type tail
  format none
  tag mysql.error
  path /var/log/mysql/error.log
  pos_file /var/log/fluentd/mysql-error.pos
  read_from_head true
</source>


## Redis Log Configuration
<source>
  @type tail
  format none
  tag redis.log
  path /var/log/redis/redis.log
  pos_file /var/log/fluentd/redis-log.pos
  read_from_head true
</source>


# Elasticsearch Output (Log storage for all services)
<match nginx.access, mysql.slow_query, mysql.error, redis.log, biblio_app.log, biblio_api.log>
  @type elasticsearch
  host elasticsearch
  port 9200
  logstash_format true
  logstash_prefix BiblioLog
  logstash_dateformat %Y%m%d
  include_tag_key true
  type_name access_log
  tag_key @log_name
  flush_interval 1s
</match>

# Output to stdout for debugging
<match nginx.access, mysql.slow_query, mysql.error, redis.log, biblio_app.log, biblio_api.log>
  @type stdout
</match>

# Copy output to multiple destinations (Elasticsearch and stdout)
<match *.**>
  @type copy
  <store>
    @type elasticsearch
    host elasticsearch
    port 9200
    logstash_format true
    logstash_prefix fluentd
    logstash_dateformat %Y%m%d
    include_tag_key true
    type_name access_log
    tag_key @log_name
    flush_interval 1s
  </store>
  <store>
    @type stdout
  </store>
</match>